---
- name: Check and Install Dependencies Packages
  hosts: localhost
  become: true
  tasks:
    - name: Check if packages are installed
      package_facts:
        manager: auto
      register: package_result

    - name: Create VM-setup folder
      file:
        path: "{{ ansible_env.PWD }}/VM-setup"
        state: directory

    - name: Download Virtual Machine image debian10-ssh.img.tar.xz
      get_url:
        url: "https://immfly-infra-technical-test.s3-eu-west-1.amazonaws.com/debian10-ssh.img.tar.xz"
        dest: "{{ ansible_env.PWD }}/VM-setup/debian10-ssh.img.tar.xz"

    - name: Extract Virtual Machine image debian10-ssh.img.tar.xz
      unarchive:
        src: "{{ ansible_env.PWD }}/VM-setup/debian10-ssh.img.tar.xz"
        dest: "{{ ansible_env.PWD }}/VM-setup/"
        remote_src: true

    - name: Download Virtual Machine RSA Key
      get_url:
        url: "https://raw.githubusercontent.com/immfly/tech-test-infra/master/assets/rsa"
        dest: "{{ ansible_env.PWD }}/VM-setup/rsa"

    - name: Download Virtual Machine RSA Public Key
      get_url:
        url: "https://raw.githubusercontent.com/immfly/tech-test-infra/master/assets/rsa.pub"
        dest: "{{ ansible_env.PWD }}/VM-setup/rsa.pub"

    - name: Download vm.xml
      get_url:
        url: "https://raw.githubusercontent.com/immfly/tech-test-infra/master/assets/vm.xml"
        dest: "{{ ansible_env.PWD }}/VM-setup/vm.xml"

    - name: Configure vm.xml
      replace:
        path: "{{ ansible_env.PWD }}/VM-setup/vm.xml"
        regexp: "\\${PATH_TO_VM_DISK_FILE}"
        replace: "{{ ansible_env.PWD }}/VM-setup/debian10-ssh.img"

    - name: Initialize VM
      command: virsh create "{{ ansible_env.PWD }}/VM-setup/vm.xml"
      ignore_errors: true

    - name: Create Basic Ansible Structure
      script: "{{ ansible_env.PWD }}/create_ansible_structure.sh"

    - name: Download Frontend file
      get_url:
        url: "https://raw.githubusercontent.com/immfly/tech-test-infra/master/assets/index.html"
        dest: "{{ ansible_env.PWD }}/frontend/index.html"

    - name: Copy and execute init files in VM
      script: "{{ ansible_env.PWD }}/copy_init_files_to_vm.sh"
      ignore_errors: true

    - name: Create local ansible inventory file with vm data
      script: "{{ ansible_env.PWD }}/create_inventory_file.sh"
